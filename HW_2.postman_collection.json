{
	"info": {
		"_postman_id": "5d8ebc47-3692-40f4-8459-b9279c0258eb",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"1 Verify status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"2 Body matches string\"), function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"server\");\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"2 Verify status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"4 Checking name in the response and request\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Vika\");\r",
							"});\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"5 Checking age in the response and request\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"21\");\r",
							"});\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"6 Checking salary in the response and request\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(1100);\r",
							"});\r",
							"// 7. Спарсить request.\r",
							"var reqBody = request.data;\r",
							"\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"8 Checking name in the response and request\", function () {\r",
							"    pm.expect(jsonData.name)==reqBody.name;\r",
							"});\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"9 Checking age in the  response and request\", function (){\r",
							"    pm.expect(jsonData.age)==reqBody.age;\r",
							"});\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"10 Checking salary in the response and request\", function(){\r",
							"    pm.expect(jsonData.salary)==reqBody.salary;\r",
							"});\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"console.log(jsonData.family);\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"12 Checking u_salary_1_5_year=salary*4\", function() {\r",
							"    pm.expect(jsonData.u_salary_1_5_year)==(reqBody.salary*4)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Vika&age=21&salary=1100",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Vika"
						},
						{
							"key": "age",
							"value": "21"
						},
						{
							"key": "salary",
							"value": "1100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Verify status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"// 4. Спарсить request.\r",
							"var reqBody = request.data;\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"5 Checking: name in resp = name in req\", function(){\r",
							"    pm.expect(jsonData.name)==(reqBody.name);\r",
							"});\r",
							"//console.log(reqBody.name);\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"6 Checking: age in resp = age in req\", function(){\r",
							"    pm.expect(jsonData.age)==(reqBody.age);\r",
							"});\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"7 Checking: salary in resp = salary in req\", function(){\r",
							"    pm.expect(jsonData.salary)==(reqBody.salary);\r",
							"});\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"console.log(jsonData.family);\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"9 Prorerty dog: name\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog).to.haveOwnProperty('name');\r",
							"\r",
							"});\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"9 Prorerty dog: age\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog).to.haveOwnProperty('age');\r",
							"\r",
							"});\r",
							"//console.log(jsonData.family.pets.dog.name);\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"10 Prorerty dog name is Luky\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky');\r",
							"\r",
							"});\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"11 Prorerty dog age = 4\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"//console.log(jsonData.family.pets.dog.age);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Vika&age=21&salary=1100",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Vika"
						},
						{
							"key": "age",
							"value": "21"
						},
						{
							"key": "salary",
							"value": "1100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"2 Verify status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// 4. Спарсить request.\r",
							"var reqBody = request.data;\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"5 Checking: name in resp = name in req\", function(){\r",
							"    pm.expect(jsonData.name)==(reqBody.name);\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"6 Checking: age in resp = age in req\", function(){\r",
							"    pm.expect(jsonData.age)==(reqBody.age);\r",
							"});\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"console.log(\"Параметр salary из request ---\", reqBody.salary);\r",
							"//пишет undefined\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"console.log(\"Параметр salary из response ---\", jsonData.salary);\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(\"Нулевой параметр salary из response ---\", jsonData.salary[0]);\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"Первый параметр salary из response ---\", jsonData.salary[1]);\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"Второй параметр salary из response ---\", jsonData.salary[2]);\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"12 Verify jsonData.salary[0] == reqBody.salary\", function(){\r",
							"    pm.expect(jsonData.salary[0])==(reqBody.salary);\r",
							"});\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"13 Verify jsonData.salary[1] == (reqBody.salary*2)\", function(){\r",
							"    pm.expect(jsonData.salary[1])==(reqBody.salary*2);\r",
							"});\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"14 Verify jsonData.salary[2] == (reqBody.salary*3)\", function(){\r",
							"    pm.expect(jsonData.salary[2])==(reqBody.salary*3);\r",
							"});\r",
							"// 15. Создать в окружении переменную name\r",
							"// 16. Создать в окружении переменную age\r",
							"// 17. Создать в окружении переменную salary\r",
							"// 15,16,17: https://prnt.sc/26lwizo\r",
							"\r",
							"// 18. Передать в окружение переменную name\r",
							"pm.environment.set(\"name\", jsonData.name);\r",
							"console.log(environment.name);\r",
							"// 19. Передать в окружение переменную age\r",
							"pm.environment.set(\"age\", jsonData.age);\r",
							"console.log(environment.age);\r",
							"// 20. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\", jsonData.salary);\r",
							"//console.log(environment.salary);\r",
							"\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"for(var i = 0;i < jsonData.salary.length;i++){\r",
							"\r",
							"    console.log(jsonData.salary[i])\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Luba&age=18&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Luba"
						},
						{
							"key": "age",
							"value": "18"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Спарсить request.\r",
							"var reqBody = request.data;\r",
							"\r",
							"// 1. Вставить параметр salary из окружения в request\r",
							"environment.salary == reqBody.salary;\r",
							"console.log(environment.salary);\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"environment.age == reqBody.age;\r",
							"console.log(environment.age);\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"environment.name == reqBody.name;\r",
							"console.log(environment.name);\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"pm.test(\"Verify status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 6. Спарсить response body в json.\r",
							"// 7. Спарсить request.\r",
							"// 6-7 выше\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"\r",
							"pm.test(\"8 json response: start_qa_salary\", function(){\r",
							"    pm.expect(jsonData).to.haveOwnProperty('start_qa_salary');\r",
							"\r",
							"});\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"9 json response: qa_salary_after_6_months\", function(){\r",
							"    pm.expect(jsonData).to.haveOwnProperty('qa_salary_after_6_months');\r",
							"\r",
							"});\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"10 json response: qa_salary_after_12_months\", function(){\r",
							"    pm.expect(jsonData).to.have.haveOwnProperty('qa_salary_after_12_months');\r",
							"});\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"11 json response: qa_salary_after_1.5_year\", function(){\r",
							"    pm.expect(jsonData).to.have.haveOwnProperty('qa_salary_after_1.5_year');\r",
							"});\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"12 json response: qa_salary_after_3.5_years\", function(){\r",
							"    pm.expect(jsonData).to.have.haveOwnProperty('qa_salary_after_3.5_years');\r",
							"});\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"13 json response: person\", function(){\r",
							"    pm.expect(jsonData).to.have.haveOwnProperty('person');\r",
							"});\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"14 Checking: start_qa_salary in resp = salary in req\", function(){\r",
							"    pm.expect(jsonData.start_qa_salary)==(reqBody.salary);\r",
							"});\r",
							"\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"15 Checking: qa_salary_after_6_months in resp = salary*2 in req\", function(){\r",
							"    pm.expect(jsonData.qa_salary_after_6_months)==(reqBody.salary*2);\r",
							"});\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"16 Checking: qa_salary_after_12_months in resp = salary*2.7 in req\", function(){\r",
							"    pm.expect(jsonData.qa_salary_after_12_months)==(reqBody.salary*2.7);\r",
							"});\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"// pm.test(\"17 Checking: qa_salary_after_1.5_year in resp = salary*3.3 in req\", function(){\r",
							"//     pm.expect(jsonData.qa_salary_after_1.5_year) == (reqBody.salary*3.3);\r",
							"// });\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"// pm.test(\"18 Checking: qa_salary_after_3.5_years in resp = salary*3.8 in req\", function(){\r",
							"//     pm.expect(jsonData.qa_salary_after_3.5_years)==((reqBody.salary)*8);\r",
							"// });\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"19 Verify jsonData.person.u_name[1] == (reqBody.salary)\", function(){\r",
							"    pm.expect(jsonData.person.u_name[1]) == reqBody.salary;\r",
							"});\r",
							"// console.log(\"1\", jsonData.person.u_name[0]);\r",
							"// console.log(\"2\", reqBody.salary);\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"20 Verify jsonData.person.u_age == (reqBody.age)\", function(){\r",
							"    pm.expect(jsonData.person.u_age) == reqBody.age;\r",
							"});\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"21 Verify jsonData.u_salary_5_years == (salary*4.2)\", function(){\r",
							"    pm.expect(jsonData.person.u_salary_5_years) == reqBody.salary*4.2;\r",
							"});\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"// for(var i = 0; i < jsonData.person.length; i++){\r",
							"\r",
							"//     console.log(jsonData.person[i])\r",
							"// }"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_2?name=Alex&age=21&salary=1500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Alex"
						},
						{
							"key": "age",
							"value": "21"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		}
	]
}